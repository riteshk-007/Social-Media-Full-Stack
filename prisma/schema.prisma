// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  name     String?
  avatar   String?
  date     DateTime @default(now())
  search   UserSearchHistory[]
   posts  Post[]
  comments Comment[]
  likes    Like[]
}
model UserSearchHistory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userEmail String
  search    String
  user      User     @relation(fields: [userEmail], references: [email])
}
model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  image     String?
  userEmail String 
  date      DateTime @default(now())
  author User     @relation(fields: [userEmail], references: [email])
  comments Comment[]
  likes    Like[]
 }
model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  date      DateTime @default(now())
  userEmail String 
  postId    String    @db.ObjectId
  author    User     @relation(fields: [userEmail], references: [email])
  post      Post     @relation(fields: [postId], references: [id])
}
model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userEmail String
  postId    String    @db.ObjectId
  user      User     @relation(fields: [userEmail], references: [email])
  post      Post     @relation(fields: [postId], references: [id])
}
